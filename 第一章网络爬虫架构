1.1 爬虫发展史
  首先从网页采集开始，爬虫从最开始的单一化请求变成了分布式采集，导致人机交互验证的出现，比如滑块，图文，点选等验证方式，为了与之抗衡出现了很多自动化工具，比如Selnium，Puppeteer等。同时为了避免接口不被滥用，出现了js为主的混淆加密技巧
  为了与之抗衡，导致很多大厂将数据放到移动端。由于APP逆向技术本身具有一定的灰度与风险，市面上已不进行推广。以Android为例，从之前的java层混淆加密以下沉至C/C++的Naive层
1.2爬虫的基本架构
  基本流程：采集目标，发起请求，数据解析，数据存储。
  真实的逻辑结构图
  1.确认抓取目标（数据在页面/数据在接口）2.分析请求协议（http/https or ws/wss）3.分析传输协议（protobuf/json/xml）4.加密参数追踪（服务器返回参数模拟生成/本地参数逆向分析）5.数据结构分析（字段提取/数据解析）6.存储模块设计7.编写爬虫代码
1.3爬虫的分布式框架
1.3.1主从分布式
主从分布式是目前最多的爬虫分布式框架采用master-slaver体系。master是主控制节点，负责任务管理调度分发，slaver端是工作任务节点，负载爬虫采集、解析以及存储任务
1.3.2对等分布式
每个对等节点根据特定的规则主动从共享任务队列中列出自己负责的采集数据任务，然后开始负责各自的采集任务，各个节点之间互不干扰。这里特定规则在对等分布式爬虫中叫作取模算法，每个节点根据URL进行hash分类编号
1.4网络爬虫遍历策略
网络爬虫分为通用爬虫和聚焦爬虫，我们平时的任务大多以聚焦爬虫为主，采集策略比较清晰，遍历爬虫更适用于搭建浏览器引擎，目前遍历策略分为：广度优先策略、深度优先策略、最佳优先策略
